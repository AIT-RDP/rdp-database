stages:
  - build
  - test
  - release
  - cleanup

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_MAIN_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  CONTAINER_DEVELOPMENT_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest-dev

# =============================================================================
# Create, test and push the docker images
#
# WARNING: These jobs execute on a shell runner. Take care not to crash the
#          system.
# =============================================================================

# Creates the docker image for productive use
build-images:
  stage: build
  tags:
    - baremetal
    - shell
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull --file docker/Dockerfile -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

# Template that pushes a release image to $CONTAINER_RELEASE_IMAGE
.release-image:
  stage: release
  tags:
    - baremetal
    - shell
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

# Release the latest-tag
release-image-main:
  extends: .release-image
  variables:
    CONTAINER_RELEASE_IMAGE: $CONTAINER_MAIN_RELEASE_IMAGE
  tags:
    - baremetal
    - shell
  only:
    - main
    - master

# release the latest-dev tag
release-image-tag:
  extends: .release-image
  variables:
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  tags:
    - baremetal
    - shell
  rules:
    - if: $CI_COMMIT_TAG

    # release the latest-dev tag
release-image-dev:
  extends: .release-image
  variables:
    CONTAINER_RELEASE_IMAGE: $CONTAINER_DEVELOPMENT_RELEASE_IMAGE
  tags:
    - baremetal
    - shell
  only:
    - development

# Removes any local docker image to avoid littering the build host
cleanup-images:
  stage: cleanup
  tags:
    - baremetal
    - shell
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker images --filter=reference="${CI_REGISTRY_IMAGE}"
    - docker rmi -f $(docker images --filter=reference="${CI_REGISTRY_IMAGE}" -q)
    - docker images
  when: always